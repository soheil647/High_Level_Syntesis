-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.41 Production Release
--  HLS Date:       Thu Apr  7 20:28:55 PDT 2011
-- 
--  Generated by:   ss@DESKTOP-UB05SU4
--  Generated date: Sat Apr 20 18:20:05 2019
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    Convolotion_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (1 DOWNTO 0)
  );
END Convolotion_core_fsm;

ARCHITECTURE v4 OF Convolotion_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for Convolotion_core_fsm_1
  TYPE Convolotion_core_fsm_1_ST IS (st_main, st_main_1);

  SIGNAL state_var : Convolotion_core_fsm_1_ST;
  SIGNAL state_var_NS : Convolotion_core_fsm_1_ST;

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_fsm_1 : PROCESS (state_var)
  BEGIN
    CASE state_var IS
      WHEN st_main =>
        fsm_output <= STD_LOGIC_VECTOR'("01");
        state_var_NS <= st_main_1;
      WHEN st_main_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("10");
        state_var_NS <= st_main;
      WHEN OTHERS =>
        fsm_output <= "00";
        state_var_NS <= st_main;
    END CASE;
  END PROCESS Convolotion_core_fsm_1;

  Convolotion_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= st_main;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS Convolotion_core_fsm_1_REG;

END v4;

-- ------------------------------------------------------------------
--  Design Unit:    Convolotion_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    in_rsc_singleport_re : OUT STD_LOGIC;
    in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    out_rsc_singleport_we : OUT STD_LOGIC
  );
END Convolotion_core;

ARCHITECTURE v4 OF Convolotion_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL fsm_output : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_acc_3_tmp : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL for_for_for_for_acc_3_tmp : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL for_for_for_for_acc_1_tmp : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL or_dcpl_2 : STD_LOGIC;
  SIGNAL or_dcpl_4 : STD_LOGIC;
  SIGNAL and_dcpl_44 : STD_LOGIC;
  SIGNAL exit_for_for_lpi : STD_LOGIC;
  SIGNAL Kcolumn_1_lpi : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL exit_for_for_for_lpi : STD_LOGIC;
  SIGNAL Krow_1_lpi : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL exit_for_1_lpi : STD_LOGIC;
  SIGNAL Result_sg2_lpi_reg : STD_LOGIC;
  SIGNAL Result_sg1_lpi_reg : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Result_1_lpi_reg : STD_LOGIC;
  SIGNAL for_for_for_for_lor_lpi_reg : STD_LOGIC;
  SIGNAL exit_for_for_for_1_sva_reg : STD_LOGIC;
  SIGNAL exit_for_for_1_sva_reg : STD_LOGIC;
  SIGNAL exit_for_lpi_dfm_2 : STD_LOGIC;
  SIGNAL for_for_for_for_else_acc_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_else_slc_conv1_2_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_else_mux_reg : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_else_mux_1_reg : STD_LOGIC;
  SIGNAL Drow_slc_Drow_1_reg : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL Dcolumn_slc_Dcolumn_1_reg : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL Drow_slc_Drow_7_reg : STD_LOGIC;
  SIGNAL Drow_slc_Drow_8_itm_1 : STD_LOGIC;
  SIGNAL Dcolumn_slc_Dcolumn_8_itm_1 : STD_LOGIC;
  SIGNAL main_stage_0_2 : STD_LOGIC;
  SIGNAL Dcolumn_1_lpi_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL Drow_1_lpi_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_20_cse : STD_LOGIC;
  SIGNAL Dcolumn_1_lpi_dfm_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_21_cse : STD_LOGIC;
  SIGNAL reg_Drow_1_sva_1_tmp : STD_LOGIC;
  SIGNAL reg_Dcolumn_1_sva_1_tmp : STD_LOGIC;
  SIGNAL and_cse : STD_LOGIC;
  SIGNAL and_58_cse : STD_LOGIC;
  SIGNAL Result_sg2_lpi_dfm_1_mx0 : STD_LOGIC;
  SIGNAL Result_sg1_lpi_dfm_1_mx0 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Result_1_lpi_dfm_1_mx0 : STD_LOGIC;
  SIGNAL or_dcpl : STD_LOGIC;
  SIGNAL and_68_cse : STD_LOGIC;
  SIGNAL Dcolumn_1_sva_1 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL slc_sat_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL Kcolumn_1_sva_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL Krow_1_sva_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL nor_4_m1c : STD_LOGIC;
  SIGNAL or_25_tmp : STD_LOGIC;
  SIGNAL and_90_cse : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_75_cse : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_80_cse : STD_LOGIC;
  SIGNAL and_77_cse : STD_LOGIC;
  SIGNAL for_for_for_acc_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_acc_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_else_ac_fixed_cctor_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL exit_for_for_lpi_dfm_2_mx0 : STD_LOGIC;
  SIGNAL exit_for_for_for_lpi_dfm_2_mx0 : STD_LOGIC;
  SIGNAL exit_for_for_1_sva_reg_mx0w0 : STD_LOGIC;
  SIGNAL exit_for_for_for_1_sva_reg_1 : STD_LOGIC;
  SIGNAL Krow_1_lpi_dfm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL Result_1_lpi_dfm_3_mx0 : STD_LOGIC;
  SIGNAL Result_sg2_lpi_dfm_3_mx0 : STD_LOGIC;
  SIGNAL for_for_for_for_else_acc_6_sdt : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL exit_for_for_for_lpi_dfm_4 : STD_LOGIC;
  SIGNAL exit_for_lpi_dfm_2_mx0w1 : STD_LOGIC;
  SIGNAL and_dcpl : STD_LOGIC;
  SIGNAL slc_exs_24_tmp_tmp : STD_LOGIC;
  SIGNAL and_105_cse : STD_LOGIC;
  SIGNAL and_104_cse : STD_LOGIC;
  SIGNAL or_35_cse : STD_LOGIC;
  SIGNAL for_for_for_for_else_acc_7_itm : STD_LOGIC_VECTOR (2 DOWNTO 0);

  COMPONENT Convolotion_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (1 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL Convolotion_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (1 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_fsm_inst : convolotion_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      fsm_output => Convolotion_core_fsm_inst_fsm_output
    );
  fsm_output <= Convolotion_core_fsm_inst_fsm_output;

  and_21_cse <= or_dcpl_4 AND (fsm_output(0));
  and_cse <= (NOT or_dcpl_2) AND and_21_cse;
  and_58_cse <= or_dcpl_2 AND and_21_cse;
  nor_4_m1c <= NOT(or_dcpl OR and_68_cse);
  and_75_cse <= Kcolumn_1_lpi AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT exit_for_1_lpi,
      1),2));
  and_80_cse <= (NOT (fsm_output(0))) AND nor_4_m1c;
  and_77_cse <= and_20_cse AND nor_4_m1c;
  and_104_cse <= and_dcpl AND (NOT (for_for_acc_3_tmp(9)));
  or_35_cse <= (and_dcpl AND (for_for_acc_3_tmp(9))) OR ((NOT (for_for_for_for_acc_itm(1)))
      AND or_dcpl_2 AND and_21_cse AND nor_4_m1c);
  and_90_cse <= Drow_1_lpi_2 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT exit_for_1_lpi,
      1),9));
  or_25_tmp <= and_dcpl_44 OR exit_for_lpi_dfm_2;
  for_for_for_for_else_ac_fixed_cctor_sva <= (slc_sat_sva(7 DOWNTO 0)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(slc_sat_sva(8),
      1),8));
  slc_sat_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR(Result_sg2_lpi_reg)
      & Result_sg1_lpi_reg & TO_STDLOGICVECTOR(Result_1_lpi_reg)), 9) + CONV_UNSIGNED(UNSIGNED(readslice(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(UNSIGNED(in_rsc_singleport_data_out)
      * UNSIGNED(for_for_for_for_else_mux_reg & TO_STDLOGICVECTOR('0') & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(for_for_for_for_else_mux_1_reg,
      1),2)))), 12)), 7, 5)), 9), 9));
  Result_sg2_lpi_dfm_1_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_sva(7))
      & Result_sg2_lpi_reg), for_for_for_for_lor_lpi_reg);
  Result_sg1_lpi_dfm_1_mx0 <= MUX_v_6_2_2((for_for_for_for_else_ac_fixed_cctor_sva(6
      DOWNTO 1)) & Result_sg1_lpi_reg, for_for_for_for_lor_lpi_reg);
  Result_1_lpi_dfm_1_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_sva(0))
      & Result_1_lpi_reg), for_for_for_for_lor_lpi_reg);
  for_for_for_for_acc_1_tmp <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(UNSIGNED(and_75_cse),
      3) + CONV_SIGNED(CONV_SIGNED('1', 1), 3), 11) + CONV_SIGNED(UNSIGNED(Dcolumn_1_lpi_dfm_2),
      11), 11));
  for_for_for_for_acc_3_tmp <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(Krow_1_lpi_dfm)
      + CONV_SIGNED(CONV_SIGNED('1', 1), 2), 11) + CONV_SIGNED(UNSIGNED(and_90_cse),
      11), 11));
  exit_for_for_lpi_dfm_2_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_acc_3_tmp(9))
      & (exit_for_for_lpi AND (NOT exit_for_1_lpi))), or_dcpl_2);
  for_for_acc_3_tmp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(and_90_cse),
      10) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 10), 10));
  exit_for_for_for_lpi_dfm_2_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT (for_for_for_acc_itm(1)))
      & (exit_for_for_for_lpi AND (NOT exit_for_1_lpi))), for_for_for_for_acc_itm(1));
  for_for_for_acc_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(Kcolumn_1_sva_1) + CONV_SIGNED(CONV_UNSIGNED('1',
      1), 2), 2));
  Kcolumn_1_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(and_75_cse) + CONV_UNSIGNED(CONV_UNSIGNED('1',
      1), 2), 2));
  exit_for_for_1_sva_reg_mx0w0 <= exit_for_for_for_1_sva_reg_1 AND exit_for_for_lpi_dfm_2_mx0;
  exit_for_for_for_1_sva_reg_1 <= (NOT (for_for_for_for_acc_itm(1))) AND exit_for_for_for_lpi_dfm_2_mx0;
  for_for_for_for_acc_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(Krow_1_sva_1) +
      CONV_SIGNED(CONV_UNSIGNED('1', 1), 2), 2));
  Krow_1_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(Krow_1_lpi_dfm) + CONV_UNSIGNED(CONV_UNSIGNED('1',
      1), 2), 2));
  Krow_1_lpi_dfm <= Krow_1_lpi AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT exit_for_1_lpi,
      1),2));
  Dcolumn_1_lpi_dfm_2 <= Dcolumn_1_lpi_2 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      exit_for_1_lpi, 1),9));
  Result_1_lpi_dfm_3_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_1_lpi_dfm_1_mx0
      & (Result_1_lpi_dfm_1_mx0 AND Drow_slc_Drow_8_itm_1)), exit_for_for_for_1_sva_reg);
  Result_sg2_lpi_dfm_3_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_sg2_lpi_dfm_1_mx0
      & (Result_sg2_lpi_dfm_1_mx0 AND Drow_slc_Drow_8_itm_1)), exit_for_for_for_1_sva_reg);
  for_for_for_for_else_acc_6_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Krow_1_lpi_dfm),
      3) + CONV_UNSIGNED(UNSIGNED(and_75_cse), 3), 3));
  exit_for_for_for_lpi_dfm_4 <= (NOT (for_for_for_acc_itm(1))) AND (for_for_acc_3_tmp(9));
  exit_for_lpi_dfm_2_mx0w1 <= exit_for_lpi_dfm_2 AND (NOT exit_for_1_lpi);
  Dcolumn_1_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Dcolumn_1_lpi_dfm_2),
      10) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 10), 10));
  for_for_for_for_else_acc_7_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_for_else_acc_6_sdt(2
      DOWNTO 1)), 3) + CONV_UNSIGNED(UNSIGNED(Krow_1_lpi_dfm), 3), 3));
  or_dcpl_2 <= (for_for_for_for_acc_itm(1)) OR (for_for_for_acc_itm(1));
  and_20_cse <= (NOT((for_for_for_for_acc_itm(1)) OR (for_for_for_acc_itm(1)))) AND
      (for_for_acc_3_tmp(9)) AND (fsm_output(0));
  or_dcpl_4 <= or_dcpl_2 OR (NOT (for_for_acc_3_tmp(9)));
  and_dcpl_44 <= main_stage_0_2 AND (NOT exit_for_for_1_sva_reg);
  in_rsc_singleport_addr <= for_for_for_for_else_acc_itm & for_for_for_for_else_slc_conv1_2_itm;
  in_rsc_singleport_re <= NOT((fsm_output(1)) AND (NOT for_for_for_for_lor_lpi_reg));
  out_rsc_singleport_data_in <= TO_STDLOGICVECTOR(Result_sg2_lpi_dfm_1_mx0) & Result_sg1_lpi_dfm_1_mx0
      & TO_STDLOGICVECTOR(Result_1_lpi_dfm_1_mx0);
  out_rsc_singleport_addr <= Drow_slc_Drow_1_reg & Dcolumn_slc_Dcolumn_1_reg;
  out_rsc_singleport_we <= (NOT(main_stage_0_2 AND exit_for_for_for_1_sva_reg)) OR
      (fsm_output(1));
  or_dcpl <= (and_20_cse AND (Dcolumn_1_sva_1(9))) OR and_cse;
  and_68_cse <= and_20_cse AND (NOT (Dcolumn_1_sva_1(9)));
  and_dcpl <= or_dcpl AND (for_for_acc_3_tmp(9));
  and_105_cse <= or_dcpl AND (NOT (for_for_acc_3_tmp(9)));
  slc_exs_24_tmp_tmp <= NOT(Drow_slc_Drow_7_reg OR (NOT exit_for_for_for_1_sva_reg));
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_for_else_slc_conv1_2_itm <= STD_LOGIC_VECTOR'("000000000");
        for_for_for_for_else_acc_itm <= STD_LOGIC_VECTOR'("000000000");
        exit_for_for_lpi <= '0';
        exit_for_1_lpi <= '1';
        exit_for_for_for_lpi <= '0';
        for_for_for_for_lor_lpi_reg <= '0';
        exit_for_for_1_sva_reg <= '0';
        exit_for_for_for_1_sva_reg <= '0';
        Kcolumn_1_lpi <= STD_LOGIC_VECTOR'("00");
        Krow_1_lpi <= STD_LOGIC_VECTOR'("00");
        Dcolumn_1_lpi_2 <= STD_LOGIC_VECTOR'("000000000");
        Drow_1_lpi_2 <= STD_LOGIC_VECTOR'("000000000");
        main_stage_0_2 <= '0';
        Dcolumn_slc_Dcolumn_8_itm_1 <= '0';
        Drow_slc_Drow_8_itm_1 <= '0';
        for_for_for_for_else_mux_1_reg <= '0';
        for_for_for_for_else_mux_reg <= STD_LOGIC_VECTOR'("00");
        exit_for_lpi_dfm_2 <= '0';
        Dcolumn_slc_Dcolumn_1_reg <= STD_LOGIC_VECTOR'("000000000");
        Drow_slc_Drow_1_reg <= STD_LOGIC_VECTOR'("000000000");
        Result_1_lpi_reg <= '0';
        Result_sg1_lpi_reg <= STD_LOGIC_VECTOR'("000000");
        Result_sg2_lpi_reg <= '0';
        Drow_slc_Drow_7_reg <= '0';
        reg_Drow_1_sva_1_tmp <= '0';
        reg_Dcolumn_1_sva_1_tmp <= '0';
      ELSE
        for_for_for_for_else_slc_conv1_2_itm <= for_for_for_for_acc_1_tmp(8 DOWNTO
            0);
        for_for_for_for_else_acc_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_acc_3_tmp(8
            DOWNTO 0)) + CONV_UNSIGNED(SIGNED(for_for_for_for_acc_1_tmp(10 DOWNTO
            9)), 9), 9));
        exit_for_for_lpi <= MUX1HOT_s_1_3_2(STD_LOGIC_VECTOR'(((for_for_acc_3_tmp(9))
            AND (Dcolumn_1_sva_1(9))) & exit_for_for_lpi_dfm_2_mx0 & exit_for_for_lpi),
            STD_LOGIC_VECTOR'(and_20_cse & and_21_cse & (NOT (fsm_output(0)))));
        exit_for_1_lpi <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(exit_for_1_lpi & (exit_for_for_1_sva_reg_mx0w0
            AND (MUX_s_1_2_2(STD_LOGIC_VECTOR'((Dcolumn_1_sva_1(9)) & exit_for_lpi_dfm_2_mx0w1),
            or_dcpl_4)))), fsm_output(0));
        exit_for_for_for_lpi <= MUX1HOT_s_1_4_2(STD_LOGIC_VECTOR'((exit_for_for_for_lpi_dfm_4
            AND (Dcolumn_1_sva_1(9))) & exit_for_for_for_lpi_dfm_4 & exit_for_for_for_lpi_dfm_2_mx0
            & exit_for_for_for_lpi), STD_LOGIC_VECTOR'(and_20_cse & and_cse & and_58_cse
            & (NOT (fsm_output(0)))));
        for_for_for_for_lor_lpi_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(for_for_for_for_lor_lpi_reg
            & ((readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT (for_for_for_for_acc_3_tmp(10
            DOWNTO 9))) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 2), 2)), 1)) OR (for_for_for_for_acc_3_tmp(10))
            OR (for_for_for_for_acc_1_tmp(9)) OR (for_for_for_for_acc_1_tmp(10)))),
            fsm_output(0));
        exit_for_for_1_sva_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(exit_for_for_1_sva_reg
            & exit_for_for_1_sva_reg_mx0w0), fsm_output(0));
        exit_for_for_for_1_sva_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(exit_for_for_for_1_sva_reg
            & exit_for_for_for_1_sva_reg_1), fsm_output(0));
        Kcolumn_1_lpi <= NOT((NOT(((MUX_v_2_2_2(((MUX_v_2_2_2(and_75_cse & Kcolumn_1_lpi,
            and_80_cse)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT or_dcpl,
            1),2))) & Kcolumn_1_sva_1, or_35_cse)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            and_105_cse, 1),2))) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_104_cse,
            1),2)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_77_cse, 1),2))))
            OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_68_cse, 1),2)));
        Krow_1_lpi <= NOT((NOT((NOT((MUX_v_2_2_2((NOT((MUX_v_2_2_2(Krow_1_sva_1 &
            Krow_1_lpi, and_80_cse)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            or_dcpl, 1),2)))) & (NOT(Krow_1_sva_1 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (for_for_for_acc_itm(1)), 1),2)))), or_35_cse)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_105_cse,
            1),2)))) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_104_cse, 1),2))
            OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_77_cse, 1),2)))) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_68_cse,
            1),2)));
        Dcolumn_1_lpi_2 <= MUX1HOT_v_9_3_2((Dcolumn_1_sva_1(8 DOWNTO 0)) & Dcolumn_1_lpi_dfm_2
            & Dcolumn_1_lpi_2, STD_LOGIC_VECTOR'(and_20_cse & and_21_cse & (NOT (fsm_output(0)))));
        Drow_1_lpi_2 <= NOT((NOT((MUX1HOT_v_9_3_2(and_90_cse & Drow_1_lpi_2 & (for_for_acc_3_tmp(8
            DOWNTO 0)), STD_LOGIC_VECTOR'((and_58_cse AND nor_4_m1c) & and_80_cse
            & or_dcpl))) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_77_cse,
            1),9)))) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_68_cse, 1),9)));
        main_stage_0_2 <= '1';
        Dcolumn_slc_Dcolumn_8_itm_1 <= reg_Dcolumn_1_sva_1_tmp;
        Drow_slc_Drow_8_itm_1 <= reg_Drow_1_sva_1_tmp;
        for_for_for_for_else_mux_1_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((MUX_s_1_16_2(STD_LOGIC_VECTOR'('0'
            & '0' & '0' & '0' & '1' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'
            & '0' & '0' & '0'), for_for_for_for_else_acc_7_itm & TO_STDLOGICVECTOR(for_for_for_for_else_acc_6_sdt(0))))
            & for_for_for_for_else_mux_1_reg), fsm_output(1));
        for_for_for_for_else_mux_reg <= MUX_v_2_2_2((MUX_v_2_16_2(STD_LOGIC_VECTOR'("01")
            & STD_LOGIC_VECTOR'("10") & STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("10")
            & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("10") & STD_LOGIC_VECTOR'("01")
            & STD_LOGIC_VECTOR'("10") & STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("00")
            & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00")
            & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00"),
            for_for_for_for_else_acc_7_itm & TO_STDLOGICVECTOR(for_for_for_for_else_acc_6_sdt(0))))
            & for_for_for_for_else_mux_reg, fsm_output(1));
        exit_for_lpi_dfm_2 <= MUX1HOT_s_1_3_2(STD_LOGIC_VECTOR'((Dcolumn_1_sva_1(9))
            & exit_for_lpi_dfm_2_mx0w1 & exit_for_lpi_dfm_2), STD_LOGIC_VECTOR'(and_20_cse
            & and_21_cse & (NOT (fsm_output(0)))));
        Dcolumn_slc_Dcolumn_1_reg <= MUX_v_9_2_2(Dcolumn_1_lpi_dfm_2 & Dcolumn_slc_Dcolumn_1_reg,
            fsm_output(1));
        Drow_slc_Drow_1_reg <= MUX_v_9_2_2(and_90_cse & Drow_slc_Drow_1_reg, fsm_output(1));
        Result_1_lpi_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_1_lpi_reg & ((MUX_s_1_2_2(STD_LOGIC_VECTOR'((Result_1_lpi_dfm_3_mx0
            AND Dcolumn_slc_Dcolumn_8_itm_1) & Result_1_lpi_dfm_3_mx0), and_dcpl_44))
            AND main_stage_0_2 AND (NOT exit_for_1_lpi))), fsm_output(0));
        Result_sg1_lpi_reg <= MUX_v_6_2_2(Result_sg1_lpi_reg & ((NOT((NOT(((Result_sg1_lpi_dfm_1_mx0
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT slc_exs_24_tmp_tmp,
            1),6))) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(slc_exs_24_tmp_tmp,
            1),6))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT((NOT Drow_slc_Drow_7_reg)
            AND exit_for_for_for_1_sva_reg), 1),6)))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(or_25_tmp,
            1),6)))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(or_25_tmp, 1),6))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(main_stage_0_2, 1),6)) AND
            STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT exit_for_1_lpi, 1),6))),
            fsm_output(0));
        Result_sg2_lpi_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_sg2_lpi_reg &
            ((MUX_s_1_2_2(STD_LOGIC_VECTOR'((Result_sg2_lpi_dfm_3_mx0 AND Dcolumn_slc_Dcolumn_8_itm_1)
            & Result_sg2_lpi_dfm_3_mx0), and_dcpl_44)) AND main_stage_0_2 AND (NOT
            exit_for_1_lpi))), fsm_output(0));
        Drow_slc_Drow_7_reg <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_acc_3_tmp(9))
            & Drow_slc_Drow_7_reg), fsm_output(1));
        reg_Drow_1_sva_1_tmp <= for_for_acc_3_tmp(9);
        reg_Dcolumn_1_sva_1_tmp <= Dcolumn_1_sva_1(9);
      END IF;
    END IF;
  END PROCESS;
END v4;

-- ------------------------------------------------------------------
--  Design Unit:    Convolotion
--  Generated from file(s):
--    2) $PROJECT_HOME/ESL_CA2.c
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    in_rsc_singleport_re : OUT STD_LOGIC;
    in_rsc_singleport_we : OUT STD_LOGIC;
    in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    out_rsc_singleport_re : OUT STD_LOGIC;
    out_rsc_singleport_we : OUT STD_LOGIC;
    out_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0)
  );
END Convolotion;

ARCHITECTURE v4 OF Convolotion IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL in_rsc_singleport_addr_reg : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL in_rsc_singleport_re_reg : STD_LOGIC;
  SIGNAL out_rsc_singleport_data_in_reg : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL out_rsc_singleport_addr_reg : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL out_rsc_singleport_we_reg : STD_LOGIC;

  COMPONENT Convolotion_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      in_rsc_singleport_re : OUT STD_LOGIC;
      in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      out_rsc_singleport_we : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Convolotion_core_inst_in_rsc_singleport_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_in_rsc_singleport_data_out : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_out_rsc_singleport_data_in : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_out_rsc_singleport_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_inst : convolotion_core
    PORT MAP(
      clk => clk,
      rst => rst,
      in_rsc_singleport_addr => Convolotion_core_inst_in_rsc_singleport_addr,
      in_rsc_singleport_re => in_rsc_singleport_re_reg,
      in_rsc_singleport_data_out => Convolotion_core_inst_in_rsc_singleport_data_out,
      out_rsc_singleport_data_in => Convolotion_core_inst_out_rsc_singleport_data_in,
      out_rsc_singleport_addr => Convolotion_core_inst_out_rsc_singleport_addr,
      out_rsc_singleport_we => out_rsc_singleport_we_reg
    );
  in_rsc_singleport_addr_reg <= Convolotion_core_inst_in_rsc_singleport_addr;
  Convolotion_core_inst_in_rsc_singleport_data_out <= in_rsc_singleport_data_out;
  out_rsc_singleport_data_in_reg <= Convolotion_core_inst_out_rsc_singleport_data_in;
  out_rsc_singleport_addr_reg <= Convolotion_core_inst_out_rsc_singleport_addr;

  in_rsc_singleport_data_in <= STD_LOGIC_VECTOR'("00000000");
  in_rsc_singleport_addr <= in_rsc_singleport_addr_reg;
  in_rsc_singleport_re <= in_rsc_singleport_re_reg;
  in_rsc_singleport_we <= '1';
  out_rsc_singleport_data_in <= out_rsc_singleport_data_in_reg;
  out_rsc_singleport_addr <= out_rsc_singleport_addr_reg;
  out_rsc_singleport_re <= '1';
  out_rsc_singleport_we <= out_rsc_singleport_we_reg;
END v4;



