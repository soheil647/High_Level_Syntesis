-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.41 Production Release
--  HLS Date:       Thu Apr  7 20:28:55 PDT 2011
-- 
--  Generated by:   ss@DESKTOP-UB05SU4
--  Generated date: Sat Apr 20 18:19:57 2019
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    Convolotion_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    in_rsc_singleport_re : OUT STD_LOGIC;
    in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    out_rsc_singleport_we : OUT STD_LOGIC
  );
END Convolotion_core;

ARCHITECTURE v4 OF Convolotion_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL in_rsc_singleport_re_reg : STD_LOGIC;
  SIGNAL out_rsc_singleport_we_reg : STD_LOGIC;
  SIGNAL in_rsc_singleport_addr_reg_sg1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL in_rsc_singleport_addr_reg_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL out_rsc_singleport_data_in_reg_sg2 : STD_LOGIC;
  SIGNAL out_rsc_singleport_data_in_reg_sg1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL out_rsc_singleport_data_in_reg_1 : STD_LOGIC;
  SIGNAL out_rsc_singleport_addr_reg_sg1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL out_rsc_singleport_addr_reg_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  core : PROCESS
    -- Interconnect Declarations
    VARIABLE exit_for_for_lpi : STD_LOGIC;
    VARIABLE Result_sg1_lpi : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_1_lpi : STD_LOGIC;
    VARIABLE Result_sg2_lpi : STD_LOGIC;
    VARIABLE Kcolumn_1_lpi : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE exit_for_for_for_lpi : STD_LOGIC;
    VARIABLE Krow_1_lpi : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE exit_for_1_lpi : STD_LOGIC;
    VARIABLE Result_sg2_lpi_dfm : STD_LOGIC;
    VARIABLE Result_sg1_lpi_dfm : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_1_lpi_dfm : STD_LOGIC;
    VARIABLE Krow_1_lpi_dfm : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Kcolumn_1_lpi_dfm : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE conv1_sva : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE conv2_sva : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE for_for_for_for_lor_1_lpi_dfm : STD_LOGIC;
    VARIABLE for_for_for_for_lor_sva_1 : STD_LOGIC;
    VARIABLE for_for_for_for_lor_lpi_dfm : STD_LOGIC;
    VARIABLE slc_sat_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE for_for_for_for_else_ac_fixed_cctor_sva : STD_LOGIC_VECTOR (7 DOWNTO
        0);
    VARIABLE Result_sg2_lpi_dfm_1 : STD_LOGIC;
    VARIABLE Result_sg1_lpi_dfm_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_1_lpi_dfm_1 : STD_LOGIC;
    VARIABLE Krow_1_sva_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE exit_for_for_for_for_sva : STD_LOGIC;
    VARIABLE Kcolumn_1_sva_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE exit_for_for_for_sva_1 : STD_LOGIC;
    VARIABLE Krow_1_lpi_dfm_2 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Kcolumn_1_lpi_dfm_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE exit_for_for_for_lpi_dfm_2 : STD_LOGIC;
    VARIABLE exit_for_for_for_1_sva : STD_LOGIC;
    VARIABLE Drow_1_sva_1 : STD_LOGIC_VECTOR (9 DOWNTO 0);
    VARIABLE Result_sg1_lpi_dfm_2 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_sg2_lpi_dfm_3 : STD_LOGIC;
    VARIABLE Result_sg1_lpi_dfm_3 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_1_lpi_dfm_3 : STD_LOGIC;
    VARIABLE Krow_1_lpi_dfm_4 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Kcolumn_1_lpi_dfm_3 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE exit_for_for_lpi_dfm_2 : STD_LOGIC;
    VARIABLE exit_for_for_for_lpi_dfm_4 : STD_LOGIC;
    VARIABLE exit_for_for_1_sva : STD_LOGIC;
    VARIABLE Dcolumn_1_sva_1 : STD_LOGIC_VECTOR (9 DOWNTO 0);
    VARIABLE Result_sg1_lpi_dfm_4 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE exit_for_lpi_dfm_2 : STD_LOGIC;
    VARIABLE Result_sg2_lpi_dfm_6 : STD_LOGIC;
    VARIABLE Result_sg1_lpi_dfm_6 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_1_lpi_dfm_6 : STD_LOGIC;
    VARIABLE for_for_for_for_lor_lpi_dfm_1 : STD_LOGIC;
    VARIABLE exit_for_for_for_1_sva_1 : STD_LOGIC;
    VARIABLE exit_for_for_1_sva_1 : STD_LOGIC;
    VARIABLE for_for_for_for_else_acc_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE for_for_for_for_else_mux_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE for_for_for_for_else_mux_itm_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE for_for_for_for_else_mux_1_itm : STD_LOGIC;
    VARIABLE for_for_for_for_else_mux_1_itm_1 : STD_LOGIC;
    VARIABLE Drow_slc_Drow_1_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Drow_slc_Drow_1_itm_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Dcolumn_slc_Dcolumn_1_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Dcolumn_slc_Dcolumn_1_itm_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Drow_slc_Drow_7_itm : STD_LOGIC;
    VARIABLE Drow_slc_Drow_7_itm_1 : STD_LOGIC;
    VARIABLE Drow_slc_Drow_6_itm_1 : STD_LOGIC;
    VARIABLE Drow_slc_Drow_8_itm_1 : STD_LOGIC;
    VARIABLE Dcolumn_slc_Dcolumn_7_itm : STD_LOGIC;
    VARIABLE Dcolumn_slc_Dcolumn_7_itm_1 : STD_LOGIC;
    VARIABLE Dcolumn_slc_Dcolumn_6_itm_1 : STD_LOGIC;
    VARIABLE Dcolumn_slc_Dcolumn_8_itm_1 : STD_LOGIC;
    VARIABLE for_for_for_for_lor_lpi_dfm_st_1 : STD_LOGIC;
    VARIABLE exit_for_for_for_1_sva_st_1 : STD_LOGIC;
    VARIABLE exit_for_for_1_sva_st_1 : STD_LOGIC;
    VARIABLE main_stage_0_2 : STD_LOGIC;
    VARIABLE Dcolumn_1_lpi_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Drow_1_lpi_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Drow_1_lpi_dfm_4 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Dcolumn_1_lpi_dfm_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE Drow_1_lpi_dfm_5 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE for_for_for_for_else_acc_6_sdt : STD_LOGIC_VECTOR (2 DOWNTO 0);
    VARIABLE for_for_for_for_else_acc_7_psp : STD_LOGIC_VECTOR (2 DOWNTO 0);
    VARIABLE exit_for_for_for_1_sva_st_1_tcond : STD_LOGIC;
    VARIABLE in_rsc_singleport_re_reg_var : STD_LOGIC;
    VARIABLE out_rsc_singleport_we_reg_var : STD_LOGIC;
    VARIABLE Result_sg2_lpi_dfm_7 : STD_LOGIC;
    VARIABLE Result_sg1_lpi_dfm_7 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE Result_1_lpi_dfm_7 : STD_LOGIC;
    VARIABLE exit_for_for_for_1_sva_st_1_tcond_1 : STD_LOGIC;
    VARIABLE last_clk : STD_LOGIC;
    VARIABLE in_rsc_singleport_addr_reg_var_sg1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE in_rsc_singleport_addr_reg_var_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE out_rsc_singleport_data_in_reg_var_sg2 : STD_LOGIC;
    VARIABLE out_rsc_singleport_data_in_reg_var_sg1 : STD_LOGIC_VECTOR (5 DOWNTO
        0);
    VARIABLE out_rsc_singleport_data_in_reg_var_1 : STD_LOGIC;
    VARIABLE out_rsc_singleport_addr_reg_var_sg1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
    VARIABLE out_rsc_singleport_addr_reg_var_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);

  BEGIN
    main : LOOP
      -- C-Step 0 of Loop 'main'
      in_rsc_singleport_addr_reg_var_1 := in_rsc_singleport_addr_reg_1;
      in_rsc_singleport_addr_reg_var_sg1 := in_rsc_singleport_addr_reg_sg1;
      in_rsc_singleport_re_reg_var := in_rsc_singleport_re_reg;
      out_rsc_singleport_data_in_reg_var_sg1 := out_rsc_singleport_data_in_reg_sg1;
      out_rsc_singleport_data_in_reg_var_1 := out_rsc_singleport_data_in_reg_1;
      out_rsc_singleport_data_in_reg_var_sg2 := out_rsc_singleport_data_in_reg_sg2;
      out_rsc_singleport_addr_reg_var_1 := out_rsc_singleport_addr_reg_1;
      out_rsc_singleport_addr_reg_var_sg1 := out_rsc_singleport_addr_reg_sg1;
      out_rsc_singleport_we_reg_var := out_rsc_singleport_we_reg;
      Result_sg2_lpi_dfm_7 := Result_sg2_lpi_dfm_1;
      Result_sg1_lpi_dfm_7 := Result_sg1_lpi_dfm_1;
      Result_1_lpi_dfm_7 := Result_1_lpi_dfm_1;
      exit_for_for_for_1_sva_st_1_tcond_1 := exit_for_for_for_1_sva_st_1_tcond;
      unreg_outs_lp_0 : LOOP
        -- C-Step 0 of Loop 'unreg_outs_lp_0'
        in_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
        in_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
        in_rsc_singleport_re_reg <= '1';
        out_rsc_singleport_data_in_reg_sg1 <= STD_LOGIC_VECTOR'("000000");
        out_rsc_singleport_data_in_reg_1 <= '0';
        out_rsc_singleport_data_in_reg_sg2 <= '0';
        out_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
        out_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
        out_rsc_singleport_we_reg <= '1';
        IF ( main_stage_0_2 = '1' ) THEN
          for_for_for_for_else_ac_fixed_cctor_sva := STD_LOGIC_VECTOR'("00000000");
          IF ( for_for_for_for_lor_lpi_dfm_st_1 = '1' ) THEN
          ELSE
            slc_sat_sva := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR(Result_sg2_lpi_dfm_6)
                & Result_sg1_lpi_dfm_6 & TO_STDLOGICVECTOR(Result_1_lpi_dfm_6)),
                9) + CONV_UNSIGNED(UNSIGNED(readslice(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(UNSIGNED(in_rsc_singleport_data_out)
                * UNSIGNED(for_for_for_for_else_mux_itm_1 & TO_STDLOGICVECTOR('0')
                & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(for_for_for_for_else_mux_1_itm_1,
                1),2)))), 12)), 7, 5)), 9), 9));
            for_for_for_for_else_ac_fixed_cctor_sva := (slc_sat_sva(7 DOWNTO 0))
                OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(slc_sat_sva(8), 1),8));
          END IF;
          Result_sg2_lpi_dfm_1 := MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_sva(7))
              & Result_sg2_lpi_dfm_6), for_for_for_for_lor_lpi_dfm_1);
          Result_sg1_lpi_dfm_1 := MUX_v_6_2_2((for_for_for_for_else_ac_fixed_cctor_sva(6
              DOWNTO 1)) & Result_sg1_lpi_dfm_6, for_for_for_for_lor_lpi_dfm_1);
          Result_1_lpi_dfm_1 := MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_sva(0))
              & Result_1_lpi_dfm_6), for_for_for_for_lor_lpi_dfm_1);
          exit_for_for_for_1_sva_st_1_tcond := exit_for_for_for_1_sva_st_1;
          IF ( exit_for_for_for_1_sva_st_1 = '1' ) THEN
            out_rsc_singleport_we_reg <= '0';
            out_rsc_singleport_addr_reg_1 <= Dcolumn_slc_Dcolumn_1_itm_1;
            out_rsc_singleport_addr_reg_sg1 <= Drow_slc_Drow_1_itm_1;
            out_rsc_singleport_data_in_reg_sg1 <= Result_sg1_lpi_dfm_1;
            out_rsc_singleport_data_in_reg_1 <= Result_1_lpi_dfm_1;
            out_rsc_singleport_data_in_reg_sg2 <= Result_sg2_lpi_dfm_1;
          END IF;
        END IF;
        last_clk := clk;
        WAIT UNTIL clk'EVENT OR in_rsc_singleport_data_out'EVENT;
        EXIT unreg_outs_lp_0 WHEN ( ((NOT last_clk) AND clk) = '1' );
        in_rsc_singleport_addr_reg_1 <= in_rsc_singleport_addr_reg_var_1;
        in_rsc_singleport_addr_reg_sg1 <= in_rsc_singleport_addr_reg_var_sg1;
        in_rsc_singleport_re_reg <= in_rsc_singleport_re_reg_var;
        out_rsc_singleport_data_in_reg_sg1 <= out_rsc_singleport_data_in_reg_var_sg1;
        out_rsc_singleport_data_in_reg_1 <= out_rsc_singleport_data_in_reg_var_1;
        out_rsc_singleport_data_in_reg_sg2 <= out_rsc_singleport_data_in_reg_var_sg2;
        out_rsc_singleport_addr_reg_1 <= out_rsc_singleport_addr_reg_var_1;
        out_rsc_singleport_addr_reg_sg1 <= out_rsc_singleport_addr_reg_var_sg1;
        out_rsc_singleport_we_reg <= out_rsc_singleport_we_reg_var;
        Result_sg2_lpi_dfm_1 := Result_sg2_lpi_dfm_7;
        Result_sg1_lpi_dfm_1 := Result_sg1_lpi_dfm_7;
        Result_1_lpi_dfm_1 := Result_1_lpi_dfm_7;
        exit_for_for_for_1_sva_st_1_tcond := exit_for_for_for_1_sva_st_1_tcond_1;
      END LOOP unreg_outs_lp_0;

      EXIT main WHEN ( rst = '1' );
      IF ( main_stage_0_2 = '1' ) THEN
        Result_sg1_lpi_dfm_4 := STD_LOGIC_VECTOR'("000000");
        Result_sg1_lpi_dfm_2 := STD_LOGIC_VECTOR'("000000");
        IF ( exit_for_for_for_1_sva_st_1_tcond = '1' ) THEN
          Result_sg1_lpi_dfm_2 := Result_sg1_lpi_dfm_1 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Drow_slc_Drow_7_itm_1,
              1),6));
        END IF;
        Result_sg2_lpi_dfm_3 := MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_sg2_lpi_dfm_1
            & (Result_sg2_lpi_dfm_1 AND Drow_slc_Drow_6_itm_1)), exit_for_for_for_1_sva_1);
        Result_sg1_lpi_dfm_3 := MUX_v_6_2_2(Result_sg1_lpi_dfm_1 & Result_sg1_lpi_dfm_2,
            exit_for_for_for_1_sva_1);
        Result_1_lpi_dfm_3 := MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_1_lpi_dfm_1 &
            (Result_1_lpi_dfm_1 AND Drow_slc_Drow_8_itm_1)), exit_for_for_for_1_sva_1);
        IF ( exit_for_for_1_sva_st_1 = '1' ) THEN
          Result_sg1_lpi_dfm_4 := Result_sg1_lpi_dfm_3 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Dcolumn_slc_Dcolumn_7_itm_1,
              1),6));
        END IF;
        Result_sg2_lpi := MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_sg2_lpi_dfm_3 & (Result_sg2_lpi_dfm_3
            AND Dcolumn_slc_Dcolumn_6_itm_1)), exit_for_for_1_sva_1);
        Result_sg1_lpi := MUX_v_6_2_2(Result_sg1_lpi_dfm_3 & Result_sg1_lpi_dfm_4,
            exit_for_for_1_sva_1);
        Result_1_lpi := MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_1_lpi_dfm_3 & (Result_1_lpi_dfm_3
            AND Dcolumn_slc_Dcolumn_8_itm_1)), exit_for_for_1_sva_1);
      END IF;
      Dcolumn_1_sva_1 := STD_LOGIC_VECTOR'("0000000000");
      Drow_1_sva_1 := STD_LOGIC_VECTOR'("0000000000");
      for_for_for_for_lor_sva_1 := '0';
      Result_sg2_lpi_dfm := Result_sg2_lpi AND (NOT exit_for_1_lpi);
      Result_sg1_lpi_dfm := Result_sg1_lpi AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
          exit_for_1_lpi, 1),6));
      Result_1_lpi_dfm := Result_1_lpi AND (NOT exit_for_1_lpi);
      Drow_1_lpi_dfm_4 := Drow_1_lpi_2 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
          exit_for_1_lpi, 1),9));
      Dcolumn_1_lpi_dfm_2 := Dcolumn_1_lpi_2 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
          exit_for_1_lpi, 1),9));
      Krow_1_lpi_dfm := Krow_1_lpi AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
          exit_for_1_lpi, 1),2));
      Kcolumn_1_lpi_dfm := Kcolumn_1_lpi AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
          exit_for_1_lpi, 1),2));
      conv1_sva := STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(UNSIGNED(Kcolumn_1_lpi_dfm),
          3) + CONV_SIGNED(CONV_SIGNED('1', 1), 3), 11) + CONV_SIGNED(UNSIGNED(Dcolumn_1_lpi_dfm_2),
          11), 11));
      conv2_sva := STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(Krow_1_lpi_dfm)
          + CONV_SIGNED(CONV_SIGNED('1', 1), 2), 11) + CONV_SIGNED(UNSIGNED(Drow_1_lpi_dfm_4),
          11), 11));
      for_for_for_for_lor_1_lpi_dfm := (conv2_sva(10)) OR (conv1_sva(9)) OR (conv1_sva(10));
      IF ( for_for_for_for_lor_1_lpi_dfm = '1' ) THEN
      ELSE
        for_for_for_for_lor_sva_1 := readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT
            (conv2_sva(10 DOWNTO 9))) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 2), 2)),
            1);
      END IF;
      for_for_for_for_lor_lpi_dfm := for_for_for_for_lor_sva_1 OR for_for_for_for_lor_1_lpi_dfm;
      IF ( for_for_for_for_lor_lpi_dfm = '1' ) THEN
      ELSE
        for_for_for_for_else_acc_6_sdt := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Krow_1_lpi_dfm),
            3) + CONV_UNSIGNED(UNSIGNED(Kcolumn_1_lpi_dfm), 3), 3));
        for_for_for_for_else_acc_7_psp := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_for_else_acc_6_sdt(2
            DOWNTO 1)), 3) + CONV_UNSIGNED(UNSIGNED(Krow_1_lpi_dfm), 3), 3));
        for_for_for_for_else_acc_itm := STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(conv2_sva(8
            DOWNTO 0)) + CONV_UNSIGNED(SIGNED(conv1_sva(10 DOWNTO 9)), 9), 9));
        for_for_for_for_else_mux_itm := MUX_v_2_16_2(STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("10")
            & STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("10") & STD_LOGIC_VECTOR'("00")
            & STD_LOGIC_VECTOR'("10") & STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("10")
            & STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00")
            & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00")
            & STD_LOGIC_VECTOR'("00") & STD_LOGIC_VECTOR'("00"), for_for_for_for_else_acc_7_psp
            & TO_STDLOGICVECTOR(for_for_for_for_else_acc_6_sdt(0)));
        for_for_for_for_else_mux_1_itm := MUX_s_1_16_2(STD_LOGIC_VECTOR'('0' & '0'
            & '0' & '0' & '1' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'
            & '0' & '0'), for_for_for_for_else_acc_7_psp & TO_STDLOGICVECTOR(for_for_for_for_else_acc_6_sdt(0)));
      END IF;
      Krow_1_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(Krow_1_lpi_dfm) + CONV_UNSIGNED(CONV_UNSIGNED('1',
          1), 2), 2));
      exit_for_for_for_for_sva := NOT (readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(TO_STDLOGICVECTOR('1')
          & Krow_1_sva_1) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 3), 3)), 2));
      IF ( exit_for_for_for_for_sva = '1' ) THEN
        Kcolumn_1_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(Kcolumn_1_lpi_dfm)
            + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 2), 2));
        exit_for_for_for_sva_1 := NOT (readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(TO_STDLOGICVECTOR('1')
            & Kcolumn_1_sva_1) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 3), 3)), 2));
        Krow_1_lpi_dfm_2 := Krow_1_sva_1 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(exit_for_for_for_sva_1,
            1),2));
        Kcolumn_1_lpi_dfm_1 := Kcolumn_1_sva_1;
        exit_for_for_for_lpi_dfm_2 := exit_for_for_for_sva_1;
      ELSE
        Krow_1_lpi_dfm_2 := Krow_1_sva_1;
        Kcolumn_1_lpi_dfm_1 := Kcolumn_1_lpi_dfm;
        exit_for_for_for_lpi_dfm_2 := exit_for_for_for_lpi AND (NOT exit_for_1_lpi);
      END IF;
      exit_for_for_for_1_sva := exit_for_for_for_for_sva AND exit_for_for_for_lpi_dfm_2;
      IF ( exit_for_for_for_1_sva = '1' ) THEN
        Drow_slc_Drow_1_itm := Drow_1_lpi_dfm_4;
        Dcolumn_slc_Dcolumn_1_itm := Dcolumn_1_lpi_dfm_2;
        Drow_1_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Drow_1_lpi_dfm_4),
            10) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 10), 10));
        Drow_slc_Drow_7_itm := Drow_1_sva_1(9);
        Drow_1_lpi_dfm_5 := Drow_1_sva_1(8 DOWNTO 0);
        Krow_1_lpi_dfm_4 := Krow_1_lpi_dfm_2 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Drow_1_sva_1(9),
            1),2));
        Kcolumn_1_lpi_dfm_3 := Kcolumn_1_lpi_dfm_1 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Drow_1_sva_1(9),
            1),2));
        exit_for_for_lpi_dfm_2 := Drow_1_sva_1(9);
        exit_for_for_for_lpi_dfm_4 := exit_for_for_for_lpi_dfm_2 AND (Drow_1_sva_1(9));
      ELSE
        Drow_1_lpi_dfm_5 := Drow_1_lpi_dfm_4;
        Krow_1_lpi_dfm_4 := Krow_1_lpi_dfm_2;
        Kcolumn_1_lpi_dfm_3 := Kcolumn_1_lpi_dfm_1;
        exit_for_for_lpi_dfm_2 := exit_for_for_lpi AND (NOT exit_for_1_lpi);
        exit_for_for_for_lpi_dfm_4 := exit_for_for_for_lpi_dfm_2;
      END IF;
      exit_for_for_1_sva := exit_for_for_for_1_sva AND exit_for_for_lpi_dfm_2;
      IF ( exit_for_for_1_sva = '1' ) THEN
        Dcolumn_1_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Dcolumn_1_lpi_dfm_2),
            10) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 10), 10));
        Dcolumn_slc_Dcolumn_7_itm := Dcolumn_1_sva_1(9);
        exit_for_lpi_dfm_2 := Dcolumn_1_sva_1(9);
        Drow_1_lpi_2 := Drow_1_lpi_dfm_5 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Dcolumn_1_sva_1(9),
            1),9));
        Dcolumn_1_lpi_2 := Dcolumn_1_sva_1(8 DOWNTO 0);
        Krow_1_lpi := Krow_1_lpi_dfm_4 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Dcolumn_1_sva_1(9),
            1),2));
        Kcolumn_1_lpi := Kcolumn_1_lpi_dfm_3 AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(Dcolumn_1_sva_1(9),
            1),2));
        exit_for_for_lpi := exit_for_for_lpi_dfm_2 AND (Dcolumn_1_sva_1(9));
        exit_for_for_for_lpi := exit_for_for_for_lpi_dfm_4 AND (Dcolumn_1_sva_1(9));
      ELSE
        exit_for_lpi_dfm_2 := exit_for_lpi_dfm_2 AND (NOT exit_for_1_lpi);
        Drow_1_lpi_2 := Drow_1_lpi_dfm_5;
        Dcolumn_1_lpi_2 := Dcolumn_1_lpi_dfm_2;
        Krow_1_lpi := Krow_1_lpi_dfm_4;
        Kcolumn_1_lpi := Kcolumn_1_lpi_dfm_3;
        exit_for_for_lpi := exit_for_for_lpi_dfm_2;
        exit_for_for_for_lpi := exit_for_for_for_lpi_dfm_4;
      END IF;
      exit_for_1_lpi := exit_for_for_1_sva AND exit_for_lpi_dfm_2;
      in_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
      in_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
      in_rsc_singleport_re_reg <= '1';
      out_rsc_singleport_data_in_reg_sg1 <= STD_LOGIC_VECTOR'("000000");
      out_rsc_singleport_data_in_reg_1 <= '0';
      out_rsc_singleport_data_in_reg_sg2 <= '0';
      out_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
      out_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
      out_rsc_singleport_we_reg <= '1';
      IF ( for_for_for_for_lor_lpi_dfm = '1' ) THEN
      ELSE
        in_rsc_singleport_re_reg <= '0';
        in_rsc_singleport_addr_reg_1 <= conv1_sva(8 DOWNTO 0);
        in_rsc_singleport_addr_reg_sg1 <= for_for_for_for_else_acc_itm;
      END IF;
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT main WHEN ( rst = '1' );
      -- C-Step 1 of Loop 'main'
      Result_sg2_lpi_dfm_6 := Result_sg2_lpi_dfm;
      Result_sg1_lpi_dfm_6 := Result_sg1_lpi_dfm;
      Result_1_lpi_dfm_6 := Result_1_lpi_dfm;
      for_for_for_for_lor_lpi_dfm_1 := for_for_for_for_lor_lpi_dfm;
      exit_for_for_for_1_sva_1 := exit_for_for_for_1_sva;
      exit_for_for_1_sva_1 := exit_for_for_1_sva;
      for_for_for_for_else_mux_itm_1 := for_for_for_for_else_mux_itm;
      for_for_for_for_else_mux_1_itm_1 := for_for_for_for_else_mux_1_itm;
      Drow_slc_Drow_1_itm_1 := Drow_slc_Drow_1_itm;
      Dcolumn_slc_Dcolumn_1_itm_1 := Dcolumn_slc_Dcolumn_1_itm;
      Drow_slc_Drow_7_itm_1 := Drow_slc_Drow_7_itm;
      Drow_slc_Drow_6_itm_1 := Drow_1_sva_1(9);
      Drow_slc_Drow_8_itm_1 := Drow_1_sva_1(9);
      Dcolumn_slc_Dcolumn_7_itm_1 := Dcolumn_slc_Dcolumn_7_itm;
      Dcolumn_slc_Dcolumn_6_itm_1 := Dcolumn_1_sva_1(9);
      Dcolumn_slc_Dcolumn_8_itm_1 := Dcolumn_1_sva_1(9);
      for_for_for_for_lor_lpi_dfm_st_1 := for_for_for_for_lor_lpi_dfm;
      exit_for_for_for_1_sva_st_1 := exit_for_for_for_1_sva;
      exit_for_for_1_sva_st_1 := exit_for_for_1_sva;
      main_stage_0_2 := '1';
    END LOOP main;

    exit_for_for_1_sva_st_1 := '0';
    exit_for_for_for_1_sva_st_1 := '0';
    for_for_for_for_lor_lpi_dfm_st_1 := '0';
    Dcolumn_slc_Dcolumn_8_itm_1 := '0';
    Dcolumn_slc_Dcolumn_6_itm_1 := '0';
    Dcolumn_slc_Dcolumn_7_itm_1 := '0';
    Dcolumn_slc_Dcolumn_7_itm := '0';
    Drow_slc_Drow_8_itm_1 := '0';
    Drow_slc_Drow_6_itm_1 := '0';
    Drow_slc_Drow_7_itm_1 := '0';
    Drow_slc_Drow_7_itm := '0';
    Dcolumn_slc_Dcolumn_1_itm_1 := STD_LOGIC_VECTOR'("000000000");
    Dcolumn_slc_Dcolumn_1_itm := STD_LOGIC_VECTOR'("000000000");
    Drow_slc_Drow_1_itm_1 := STD_LOGIC_VECTOR'("000000000");
    Drow_slc_Drow_1_itm := STD_LOGIC_VECTOR'("000000000");
    for_for_for_for_else_mux_1_itm_1 := '0';
    for_for_for_for_else_mux_1_itm := '0';
    for_for_for_for_else_mux_itm_1 := STD_LOGIC_VECTOR'("00");
    for_for_for_for_else_mux_itm := STD_LOGIC_VECTOR'("00");
    for_for_for_for_else_acc_itm := STD_LOGIC_VECTOR'("000000000");
    exit_for_for_1_sva_1 := '0';
    exit_for_for_for_1_sva_1 := '0';
    for_for_for_for_lor_lpi_dfm_1 := '0';
    Result_1_lpi_dfm_6 := '0';
    Result_sg1_lpi_dfm_6 := STD_LOGIC_VECTOR'("000000");
    Result_sg2_lpi_dfm_6 := '0';
    exit_for_lpi_dfm_2 := '0';
    Result_1_lpi_dfm_1 := '0';
    Result_sg1_lpi_dfm_1 := STD_LOGIC_VECTOR'("000000");
    Result_sg2_lpi_dfm_1 := '0';
    out_rsc_singleport_we_reg <= '0';
    out_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
    out_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
    out_rsc_singleport_data_in_reg_sg1 <= STD_LOGIC_VECTOR'("000000");
    out_rsc_singleport_data_in_reg_1 <= '0';
    out_rsc_singleport_data_in_reg_sg2 <= '0';
    in_rsc_singleport_re_reg <= '0';
    in_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
    in_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
    Dcolumn_1_lpi_2 := STD_LOGIC_VECTOR'("000000000");
    Drow_1_lpi_2 := STD_LOGIC_VECTOR'("000000000");
    exit_for_for_lpi := '0';
    Result_sg1_lpi := STD_LOGIC_VECTOR'("000000");
    Result_1_lpi := '0';
    Result_sg2_lpi := '0';
    Kcolumn_1_lpi := STD_LOGIC_VECTOR'("00");
    exit_for_for_for_lpi := '0';
    Krow_1_lpi := STD_LOGIC_VECTOR'("00");
    exit_for_1_lpi := '1';
    main_stage_0_2 := '0';
    in_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
    in_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
    in_rsc_singleport_re_reg <= '1';
    out_rsc_singleport_data_in_reg_sg1 <= STD_LOGIC_VECTOR'("000000");
    out_rsc_singleport_data_in_reg_1 <= '0';
    out_rsc_singleport_data_in_reg_sg2 <= '0';
    out_rsc_singleport_addr_reg_1 <= STD_LOGIC_VECTOR'("000000000");
    out_rsc_singleport_addr_reg_sg1 <= STD_LOGIC_VECTOR'("000000000");
    out_rsc_singleport_we_reg <= '1';
  END PROCESS core;

  in_rsc_singleport_addr <= in_rsc_singleport_addr_reg_sg1 & in_rsc_singleport_addr_reg_1;
  in_rsc_singleport_re <= in_rsc_singleport_re_reg;
  out_rsc_singleport_data_in <= TO_STDLOGICVECTOR(out_rsc_singleport_data_in_reg_sg2)
      & out_rsc_singleport_data_in_reg_sg1 & TO_STDLOGICVECTOR(out_rsc_singleport_data_in_reg_1);
  out_rsc_singleport_addr <= out_rsc_singleport_addr_reg_sg1 & out_rsc_singleport_addr_reg_1;
  out_rsc_singleport_we <= out_rsc_singleport_we_reg;
END v4;

-- ------------------------------------------------------------------
--  Design Unit:    Convolotion
--  Generated from file(s):
--    2) $PROJECT_HOME/ESL_CA2.c
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    in_rsc_singleport_re : OUT STD_LOGIC;
    in_rsc_singleport_we : OUT STD_LOGIC;
    in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    out_rsc_singleport_re : OUT STD_LOGIC;
    out_rsc_singleport_we : OUT STD_LOGIC;
    out_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0)
  );
END Convolotion;

ARCHITECTURE v4 OF Convolotion IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL in_rsc_singleport_addr_reg : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL in_rsc_singleport_re_reg : STD_LOGIC;
  SIGNAL out_rsc_singleport_data_in_reg : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL out_rsc_singleport_addr_reg : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL out_rsc_singleport_we_reg : STD_LOGIC;

  COMPONENT Convolotion_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      in_rsc_singleport_re : OUT STD_LOGIC;
      in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      out_rsc_singleport_we : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Convolotion_core_inst_in_rsc_singleport_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_in_rsc_singleport_data_out : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_out_rsc_singleport_data_in : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_out_rsc_singleport_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_inst : convolotion_core
    PORT MAP(
      clk => clk,
      rst => rst,
      in_rsc_singleport_addr => Convolotion_core_inst_in_rsc_singleport_addr,
      in_rsc_singleport_re => in_rsc_singleport_re_reg,
      in_rsc_singleport_data_out => Convolotion_core_inst_in_rsc_singleport_data_out,
      out_rsc_singleport_data_in => Convolotion_core_inst_out_rsc_singleport_data_in,
      out_rsc_singleport_addr => Convolotion_core_inst_out_rsc_singleport_addr,
      out_rsc_singleport_we => out_rsc_singleport_we_reg
    );
  in_rsc_singleport_addr_reg <= Convolotion_core_inst_in_rsc_singleport_addr;
  Convolotion_core_inst_in_rsc_singleport_data_out <= in_rsc_singleport_data_out;
  out_rsc_singleport_data_in_reg <= Convolotion_core_inst_out_rsc_singleport_data_in;
  out_rsc_singleport_addr_reg <= Convolotion_core_inst_out_rsc_singleport_addr;

  in_rsc_singleport_data_in <= STD_LOGIC_VECTOR'("00000000");
  in_rsc_singleport_addr <= in_rsc_singleport_addr_reg;
  in_rsc_singleport_re <= in_rsc_singleport_re_reg;
  in_rsc_singleport_we <= '1';
  out_rsc_singleport_data_in <= out_rsc_singleport_data_in_reg;
  out_rsc_singleport_addr <= out_rsc_singleport_addr_reg;
  out_rsc_singleport_re <= '1';
  out_rsc_singleport_we <= out_rsc_singleport_we_reg;
END v4;



