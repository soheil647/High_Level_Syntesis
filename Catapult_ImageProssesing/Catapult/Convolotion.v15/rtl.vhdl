-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.41 Production Release
--  HLS Date:       Thu Apr  7 20:28:55 PDT 2011
-- 
--  Generated by:   ss@DESKTOP-UB05SU4
--  Generated date: Sat Apr 20 18:47:52 2019
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    Convolotion_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    st_for_for_for_3_tr0 : IN STD_LOGIC;
    st_for_for_tr0 : IN STD_LOGIC;
    st_for_tr0 : IN STD_LOGIC
  );
END Convolotion_core_fsm;

ARCHITECTURE v15 OF Convolotion_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for Convolotion_core_fsm_1
  TYPE Convolotion_core_fsm_1_ST IS (st_main, st_for_for_for, st_for_for_for_1, st_for_for_for_2,
      st_for_for_for_3, st_for_for, st_for);

  SIGNAL state_var : Convolotion_core_fsm_1_ST;
  SIGNAL state_var_NS : Convolotion_core_fsm_1_ST;

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_fsm_1 : PROCESS (st_for_for_for_3_tr0, st_for_for_tr0, st_for_tr0,
      state_var)
  BEGIN
    CASE state_var IS
      WHEN st_main =>
        fsm_output <= STD_LOGIC_VECTOR'("0000001");
        state_var_NS <= st_for_for_for;
      WHEN st_for_for_for =>
        fsm_output <= STD_LOGIC_VECTOR'("0000010");
        state_var_NS <= st_for_for_for_1;
      WHEN st_for_for_for_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000100");
        state_var_NS <= st_for_for_for_2;
      WHEN st_for_for_for_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0001000");
        state_var_NS <= st_for_for_for_3;
      WHEN st_for_for_for_3 =>
        fsm_output <= STD_LOGIC_VECTOR'("0010000");
        IF ( st_for_for_for_3_tr0 = '1' ) THEN
          state_var_NS <= st_for_for;
        ELSE
          state_var_NS <= st_for_for_for;
        END IF;
      WHEN st_for_for =>
        fsm_output <= STD_LOGIC_VECTOR'("0100000");
        IF ( st_for_for_tr0 = '1' ) THEN
          state_var_NS <= st_for;
        ELSE
          state_var_NS <= st_for_for_for;
        END IF;
      WHEN st_for =>
        fsm_output <= STD_LOGIC_VECTOR'("1000000");
        IF ( st_for_tr0 = '1' ) THEN
          state_var_NS <= st_main;
        ELSE
          state_var_NS <= st_for_for_for;
        END IF;
      WHEN OTHERS =>
        fsm_output <= "0000000";
        state_var_NS <= st_main;
    END CASE;
  END PROCESS Convolotion_core_fsm_1;

  Convolotion_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= st_main;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS Convolotion_core_fsm_1_REG;

END v15;

-- ------------------------------------------------------------------
--  Design Unit:    Convolotion_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    in_rsc_singleport_re : OUT STD_LOGIC;
    in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    out_rsc_singleport_we : OUT STD_LOGIC
  );
END Convolotion_core;

ARCHITECTURE v15 OF Convolotion_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL fsm_output : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL for_for_for_for_3_acc_3_tmp : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL for_for_for_for_1_acc_3_tmp : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL or_dcpl_16 : STD_LOGIC;
  SIGNAL or_dcpl_18 : STD_LOGIC;
  SIGNAL and_dcpl_11 : STD_LOGIC;
  SIGNAL Result_sg1_sva : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Result_1_sva : STD_LOGIC;
  SIGNAL Result_sg2_sva : STD_LOGIC;
  SIGNAL Kcolumn_1_reg : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_lor_7_lpi_3_dfm : STD_LOGIC;
  SIGNAL for_for_for_for_lor_lpi_3_dfm : STD_LOGIC;
  SIGNAL for_for_for_for_lor_5_lpi_3_dfm_st : STD_LOGIC;
  SIGNAL for_for_for_for_1_else_acc_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_1_else_slc_conv1_2_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_else_mux_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_acc_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_else_or_itm : STD_LOGIC;
  SIGNAL for_for_for_for_else_or_1_itm : STD_LOGIC;
  SIGNAL for_for_for_for_2_else_slc_for_for_for_for_else_mul_1_sdt_itm : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL for_for_for_for_else_mux_1_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_3_else_slc_for_for_for_for_else_mul_1_sdt_itm : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL for_for_for_slc_itm : STD_LOGIC;
  SIGNAL Dcolumn_1_sva_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL Drow_1_sva_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL or_19_cse : STD_LOGIC;
  SIGNAL for_for_for_for_and_1_cse : STD_LOGIC;
  SIGNAL for_for_for_for_and_cse : STD_LOGIC;
  SIGNAL Result_sg2_sva_mx1 : STD_LOGIC;
  SIGNAL Result_sg1_sva_dfm_2 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Result_1_sva_mx1 : STD_LOGIC;
  SIGNAL z_out : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL Kcolumn_1_sva_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_else_and_1_cse : STD_LOGIC;
  SIGNAL for_for_for_for_else_and_2_cse : STD_LOGIC;
  SIGNAL for_for_for_for_else_nor_1_cse : STD_LOGIC;
  SIGNAL for_for_for_for_acc_7_cse : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_lor_7_lpi_3_dfm_mx0w0 : STD_LOGIC;
  SIGNAL Result_1_sva_dfm_mx0 : STD_LOGIC;
  SIGNAL Result_sg1_sva_dfm_mx0 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Result_sg2_sva_dfm_mx0 : STD_LOGIC;
  SIGNAL for_for_for_for_else_ac_fixed_cctor_1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL slc_sat_1_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_else_ac_fixed_cctor_2_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL slc_sat_2_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_else_ac_fixed_cctor_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL slc_sat_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);

  SIGNAL for_for_for_for_mux_8_nl : STD_LOGIC;
  SIGNAL mux1h_7_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL mux_27_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL mux_20_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux1h_42_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  COMPONENT Convolotion_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      st_for_for_for_3_tr0 : IN STD_LOGIC;
      st_for_for_tr0 : IN STD_LOGIC;
      st_for_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Convolotion_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL Convolotion_core_fsm_inst_st_for_for_for_3_tr0 : STD_LOGIC;
  SIGNAL Convolotion_core_fsm_inst_st_for_for_tr0 : STD_LOGIC;
  SIGNAL Convolotion_core_fsm_inst_st_for_tr0 : STD_LOGIC;

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_fsm_inst : convolotion_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      fsm_output => Convolotion_core_fsm_inst_fsm_output,
      st_for_for_for_3_tr0 => Convolotion_core_fsm_inst_st_for_for_for_3_tr0,
      st_for_for_tr0 => Convolotion_core_fsm_inst_st_for_for_tr0,
      st_for_tr0 => Convolotion_core_fsm_inst_st_for_tr0
    );
  fsm_output <= Convolotion_core_fsm_inst_fsm_output;
  Convolotion_core_fsm_inst_st_for_for_for_3_tr0 <= NOT for_for_for_slc_itm;
  Convolotion_core_fsm_inst_st_for_for_tr0 <= for_for_for_for_3_acc_3_tmp(9);
  Convolotion_core_fsm_inst_st_for_tr0 <= z_out(9);

  Kcolumn_1_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(Kcolumn_1_reg) + CONV_UNSIGNED(CONV_UNSIGNED('1',
      1), 2), 2));
  for_for_for_for_mux_8_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_2_sva(0))
      & Result_1_sva_dfm_mx0), for_for_for_for_lor_7_lpi_3_dfm);
  Result_1_sva_mx1 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_sva(0))
      & (for_for_for_for_mux_8_nl)), for_for_for_for_lor_lpi_3_dfm);
  for_for_for_for_and_1_cse <= for_for_for_for_lor_7_lpi_3_dfm AND for_for_for_for_lor_lpi_3_dfm;
  for_for_for_for_and_cse <= (NOT for_for_for_for_lor_7_lpi_3_dfm) AND for_for_for_for_lor_lpi_3_dfm;
  Result_sg1_sva_dfm_2 <= MUX1HOT_v_6_3_2((for_for_for_for_else_ac_fixed_cctor_sva(6
      DOWNTO 1)) & (for_for_for_for_else_ac_fixed_cctor_2_sva(6 DOWNTO 1)) & Result_sg1_sva_dfm_mx0,
      STD_LOGIC_VECTOR'((NOT for_for_for_for_lor_lpi_3_dfm) & for_for_for_for_and_cse
      & for_for_for_for_and_1_cse));
  Result_sg2_sva_mx1 <= MUX1HOT_s_1_3_2(STD_LOGIC_VECTOR'(Result_sg2_sva_dfm_mx0
      & (for_for_for_for_else_ac_fixed_cctor_2_sva(7)) & (for_for_for_for_else_ac_fixed_cctor_sva(7))),
      STD_LOGIC_VECTOR'(for_for_for_for_and_1_cse & for_for_for_for_and_cse & (NOT
      for_for_for_for_lor_lpi_3_dfm)));
  for_for_for_for_1_acc_3_tmp <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(Drow_1_sva_2),
      10) + CONV_SIGNED(CONV_SIGNED('1', 1), 10), 10));
  for_for_for_for_else_and_1_cse <= (for_for_for_for_acc_7_cse(0)) AND (NOT (for_for_for_for_acc_7_cse(1)));
  for_for_for_for_else_and_2_cse <= (for_for_for_for_acc_7_cse(1)) AND (for_for_for_for_acc_7_cse(0));
  for_for_for_for_else_nor_1_cse <= NOT((for_for_for_for_acc_7_cse(1)) OR (for_for_for_for_acc_7_cse(0)));
  for_for_for_for_acc_7_cse <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(Kcolumn_1_reg)
      + CONV_SIGNED(CONV_SIGNED('1', 1), 2), 2));
  for_for_for_for_3_acc_3_tmp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Drow_1_sva_2),
      10) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 10), 10));
  for_for_for_for_lor_7_lpi_3_dfm_mx0w0 <= (z_out(9)) OR (z_out(10));
  Result_1_sva_dfm_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_1_sva(0))
      & Result_1_sva), for_for_for_for_lor_5_lpi_3_dfm_st);
  Result_sg1_sva_dfm_mx0 <= MUX_v_6_2_2((for_for_for_for_else_ac_fixed_cctor_1_sva(6
      DOWNTO 1)) & Result_sg1_sva, for_for_for_for_lor_5_lpi_3_dfm_st);
  Result_sg2_sva_dfm_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((for_for_for_for_else_ac_fixed_cctor_1_sva(7))
      & Result_sg2_sva), for_for_for_for_lor_5_lpi_3_dfm_st);
  for_for_for_for_else_ac_fixed_cctor_1_sva <= (slc_sat_1_sva(7 DOWNTO 0)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(slc_sat_1_sva(8),
      1),8));
  slc_sat_1_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR(Result_sg2_sva)
      & Result_sg1_sva & TO_STDLOGICVECTOR(Result_1_sva)), 9) + CONV_UNSIGNED(UNSIGNED(z_out_1(8
      DOWNTO 4)), 9), 9));
  for_for_for_for_else_ac_fixed_cctor_2_sva <= (slc_sat_2_sva(7 DOWNTO 0)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(slc_sat_2_sva(8),
      1),8));
  slc_sat_2_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR(Result_sg2_sva_dfm_mx0)
      & Result_sg1_sva_dfm_mx0 & TO_STDLOGICVECTOR(Result_1_sva_dfm_mx0)), 9) + CONV_UNSIGNED(UNSIGNED(for_for_for_for_2_else_slc_for_for_for_for_else_mul_1_sdt_itm),
      9), 9));
  for_for_for_for_else_ac_fixed_cctor_sva <= (slc_sat_sva(7 DOWNTO 0)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(slc_sat_sva(8),
      1),8));
  slc_sat_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_for_else_ac_fixed_cctor_2_sva),
      9) + CONV_UNSIGNED(UNSIGNED(for_for_for_for_3_else_slc_for_for_for_for_else_mul_1_sdt_itm),
      9), 9));
  or_dcpl_16 <= (fsm_output(3)) OR (fsm_output(2));
  or_dcpl_18 <= (fsm_output(0)) OR (fsm_output(6));
  or_19_cse <= or_dcpl_18 OR (fsm_output(5));
  and_dcpl_11 <= NOT((fsm_output(0)) OR (fsm_output(6)));
  mux1h_7_nl <= MUX1HOT_v_9_3_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_3_acc_3_tmp(8
      DOWNTO 0)) + CONV_UNSIGNED(SIGNED(z_out(10 DOWNTO 9)), 9), 9)) & for_for_for_for_acc_itm
      & for_for_for_for_1_else_acc_itm, STD_LOGIC_VECTOR'((fsm_output(1)) & (fsm_output(2))
      & (fsm_output(3))));
  mux_27_nl <= MUX_v_9_2_2((z_out(8 DOWNTO 0)) & for_for_for_for_1_else_slc_conv1_2_itm,
      (fsm_output(2)) OR (fsm_output(3)));
  in_rsc_singleport_addr <= (mux1h_7_nl) & (mux_27_nl);
  in_rsc_singleport_re <= NOT(((fsm_output(1)) AND (NOT (z_out(9))) AND (NOT((for_for_for_for_3_acc_3_tmp(9))
      OR (z_out(10))))) OR ((fsm_output(3)) AND (NOT for_for_for_for_lor_5_lpi_3_dfm_st))
      OR ((NOT for_for_for_for_lor_7_lpi_3_dfm) AND (fsm_output(2))));
  out_rsc_singleport_data_in <= TO_STDLOGICVECTOR(Result_sg2_sva_mx1) & Result_sg1_sva_dfm_2
      & TO_STDLOGICVECTOR(Result_1_sva_mx1);
  out_rsc_singleport_addr <= Drow_1_sva_2 & Dcolumn_1_sva_2;
  out_rsc_singleport_we <= NOT((fsm_output(4)) AND (NOT for_for_for_slc_itm));
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        Kcolumn_1_reg <= STD_LOGIC_VECTOR'("00");
        Drow_1_sva_2 <= STD_LOGIC_VECTOR'("000000000");
        Result_1_sva <= '0';
        Result_sg1_sva <= STD_LOGIC_VECTOR'("000000");
        Result_sg2_sva <= '0';
        Dcolumn_1_sva_2 <= STD_LOGIC_VECTOR'("000000000");
        for_for_for_for_else_mux_itm <= STD_LOGIC_VECTOR'("00");
        for_for_for_for_1_else_slc_conv1_2_itm <= STD_LOGIC_VECTOR'("000000000");
        for_for_for_for_1_else_acc_itm <= STD_LOGIC_VECTOR'("000000000");
        for_for_for_for_else_or_1_itm <= '0';
        for_for_for_for_else_or_itm <= '0';
        for_for_for_for_acc_itm <= STD_LOGIC_VECTOR'("000000000");
        for_for_for_for_else_mux_1_itm <= STD_LOGIC_VECTOR'("00");
        for_for_for_for_lor_7_lpi_3_dfm <= '0';
        for_for_for_slc_itm <= '0';
        for_for_for_for_lor_lpi_3_dfm <= '0';
        for_for_for_for_lor_5_lpi_3_dfm_st <= '0';
        for_for_for_for_3_else_slc_for_for_for_for_else_mul_1_sdt_itm <= STD_LOGIC_VECTOR'("00000");
        for_for_for_for_2_else_slc_for_for_for_for_else_mul_1_sdt_itm <= STD_LOGIC_VECTOR'("00000");
      ELSE
        Kcolumn_1_reg <= (MUX_v_2_2_2(Kcolumn_1_sva_1 & Kcolumn_1_reg, or_dcpl_16
            OR (fsm_output(4)))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            or_19_cse, 1),2));
        Drow_1_sva_2 <= (MUX_v_9_2_2((for_for_for_for_3_acc_3_tmp(8 DOWNTO 0)) &
            Drow_1_sva_2, and_dcpl_11 AND (NOT (fsm_output(5))))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            or_dcpl_18, 1),9));
        Result_1_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_1_sva & Result_1_sva_mx1),
            fsm_output(4))) AND (NOT or_19_cse);
        Result_sg1_sva <= (MUX_v_6_2_2(Result_sg1_sva & Result_sg1_sva_dfm_2, fsm_output(4)))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT or_19_cse, 1),6));
        Result_sg2_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(Result_sg2_sva & Result_sg2_sva_mx1),
            fsm_output(4))) AND (NOT or_19_cse);
        Dcolumn_1_sva_2 <= (MUX_v_9_2_2((z_out(8 DOWNTO 0)) & Dcolumn_1_sva_2, and_dcpl_11))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(0)), 1),9));
        for_for_for_for_else_mux_itm <= MUX1HOT_v_2_3_2(STD_LOGIC_VECTOR'("01") &
            STD_LOGIC_VECTOR'("10") & for_for_for_for_else_mux_itm, STD_LOGIC_VECTOR'(((NOT((Kcolumn_1_reg(1))
            OR (Kcolumn_1_reg(0)) OR or_dcpl_16)) OR ((Kcolumn_1_reg(1)) AND (NOT
            (Kcolumn_1_reg(0))) AND (NOT or_dcpl_16))) & ((Kcolumn_1_reg(0)) AND
            (NOT (Kcolumn_1_reg(1))) AND (NOT or_dcpl_16)) & or_dcpl_16));
        for_for_for_for_1_else_slc_conv1_2_itm <= MUX_v_9_2_2((z_out(8 DOWNTO 0))
            & for_for_for_for_1_else_slc_conv1_2_itm, fsm_output(2));
        for_for_for_for_1_else_acc_itm <= MUX_v_9_2_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_1_acc_3_tmp(8
            DOWNTO 0)) + CONV_UNSIGNED(SIGNED(z_out(10 DOWNTO 9)), 9), 9)) & for_for_for_for_1_else_acc_itm,
            fsm_output(2));
        for_for_for_for_else_or_1_itm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(((NOT(for_for_for_for_else_and_1_cse
            OR for_for_for_for_else_and_2_cse)) OR for_for_for_for_else_nor_1_cse)
            & for_for_for_for_else_or_1_itm), fsm_output(2));
        for_for_for_for_else_or_itm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(((NOT for_for_for_for_else_nor_1_cse)
            OR for_for_for_for_else_and_1_cse OR for_for_for_for_else_and_2_cse)
            & for_for_for_for_else_or_itm), fsm_output(2));
        for_for_for_for_acc_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(z_out(10
            DOWNTO 9)), 9) + UNSIGNED(Drow_1_sva_2), 9));
        for_for_for_for_else_mux_1_itm <= MUX_v_2_4_2(STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("00")
            & STD_LOGIC_VECTOR'("01") & STD_LOGIC_VECTOR'("10"), STD_LOGIC_VECTOR'((NOT
            (Kcolumn_1_reg(1))) & (Kcolumn_1_reg(0))));
        for_for_for_for_lor_7_lpi_3_dfm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(for_for_for_for_lor_7_lpi_3_dfm
            & for_for_for_for_lor_7_lpi_3_dfm_mx0w0), fsm_output(1));
        for_for_for_slc_itm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(for_for_for_slc_itm
            & (readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(Kcolumn_1_sva_1) + CONV_SIGNED(CONV_UNSIGNED('1',
            1), 2), 2)), 1))), fsm_output(1));
        for_for_for_for_lor_lpi_3_dfm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(for_for_for_for_lor_lpi_3_dfm
            & ((for_for_for_for_3_acc_3_tmp(9)) OR for_for_for_for_lor_7_lpi_3_dfm_mx0w0)),
            fsm_output(1));
        for_for_for_for_lor_5_lpi_3_dfm_st <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(for_for_for_for_lor_5_lpi_3_dfm_st
            & ((for_for_for_for_1_acc_3_tmp(9)) OR for_for_for_for_lor_7_lpi_3_dfm_mx0w0)),
            fsm_output(1));
        for_for_for_for_3_else_slc_for_for_for_for_else_mul_1_sdt_itm <= MUX_v_5_2_2((z_out_1(8
            DOWNTO 4)) & for_for_for_for_3_else_slc_for_for_for_for_else_mul_1_sdt_itm,
            fsm_output(3));
        for_for_for_for_2_else_slc_for_for_for_for_else_mul_1_sdt_itm <= z_out_1(11
            DOWNTO 7);
      END IF;
    END IF;
  END PROCESS;
  mux_20_nl <= MUX_v_2_2_2(for_for_for_for_acc_7_cse & STD_LOGIC_VECTOR'("01"), fsm_output(6));
  z_out <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Dcolumn_1_sva_2),
      11) + CONV_UNSIGNED(SIGNED(mux_20_nl), 11), 11));
  mux1h_42_nl <= MUX1HOT_v_2_3_2(for_for_for_for_else_mux_1_itm & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(for_for_for_for_else_or_1_itm,
      1),2)) & for_for_for_for_else_mux_itm, STD_LOGIC_VECTOR'((fsm_output(2)) &
      (fsm_output(3)) & (fsm_output(4))));
  z_out_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(UNSIGNED(TO_STDLOGICVECTOR(for_for_for_for_else_or_itm
      AND (NOT((fsm_output(2)) OR (fsm_output(4))))) & STD_LOGIC_VECTOR'("00") &
      (mux1h_42_nl)) * UNSIGNED(in_rsc_singleport_data_out)), 12));
END v15;

-- ------------------------------------------------------------------
--  Design Unit:    Convolotion
--  Generated from file(s):
--    2) $PROJECT_HOME/ESL_CA2.c
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.std_logic_arith.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.convolotion_mux_pkg.ALL;


ENTITY Convolotion IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    in_rsc_singleport_re : OUT STD_LOGIC;
    in_rsc_singleport_we : OUT STD_LOGIC;
    in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    out_rsc_singleport_re : OUT STD_LOGIC;
    out_rsc_singleport_we : OUT STD_LOGIC;
    out_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0)
  );
END Convolotion;

ARCHITECTURE v15 OF Convolotion IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL in_rsc_singleport_addr_reg : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL in_rsc_singleport_re_reg : STD_LOGIC;
  SIGNAL out_rsc_singleport_data_in_reg : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL out_rsc_singleport_addr_reg : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL out_rsc_singleport_we_reg : STD_LOGIC;

  COMPONENT Convolotion_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      in_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      in_rsc_singleport_re : OUT STD_LOGIC;
      in_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      out_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      out_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      out_rsc_singleport_we : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Convolotion_core_inst_in_rsc_singleport_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_in_rsc_singleport_data_out : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_out_rsc_singleport_data_in : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL Convolotion_core_inst_out_rsc_singleport_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);

BEGIN
  -- Default Constant Signal Assignments

  Convolotion_core_inst : convolotion_core
    PORT MAP(
      clk => clk,
      rst => rst,
      in_rsc_singleport_addr => Convolotion_core_inst_in_rsc_singleport_addr,
      in_rsc_singleport_re => in_rsc_singleport_re_reg,
      in_rsc_singleport_data_out => Convolotion_core_inst_in_rsc_singleport_data_out,
      out_rsc_singleport_data_in => Convolotion_core_inst_out_rsc_singleport_data_in,
      out_rsc_singleport_addr => Convolotion_core_inst_out_rsc_singleport_addr,
      out_rsc_singleport_we => out_rsc_singleport_we_reg
    );
  in_rsc_singleport_addr_reg <= Convolotion_core_inst_in_rsc_singleport_addr;
  Convolotion_core_inst_in_rsc_singleport_data_out <= in_rsc_singleport_data_out;
  out_rsc_singleport_data_in_reg <= Convolotion_core_inst_out_rsc_singleport_data_in;
  out_rsc_singleport_addr_reg <= Convolotion_core_inst_out_rsc_singleport_addr;

  in_rsc_singleport_data_in <= STD_LOGIC_VECTOR'("00000000");
  in_rsc_singleport_addr <= in_rsc_singleport_addr_reg;
  in_rsc_singleport_re <= in_rsc_singleport_re_reg;
  in_rsc_singleport_we <= '1';
  out_rsc_singleport_data_in <= out_rsc_singleport_data_in_reg;
  out_rsc_singleport_addr <= out_rsc_singleport_addr_reg;
  out_rsc_singleport_re <= '1';
  out_rsc_singleport_we <= out_rsc_singleport_we_reg;
END v15;



